import math

"""初始化参数，包括工序，机器，订单重量，粒度"""
Job = 0
State = 14
# # Machine = [6,14,8,3,2,11,3,3,4,12,3,9,44,55]
# Machine = [7,15,9,4,3,12,4,4,5,13,4,10,45,56] # 多一台虚拟机器,实际的机器量
# # Machine = [7,15,9,4,3,12,4,4,5,13,4,10,15,10] # 多一台虚拟机器,减少最后两个工序机器量,便于看图
# # H = [500, 500, 500, 600, 600, 600, 400, 400, 200, 200, 200, 200, 200, 200, 200, 200, 200, 400, 400, 400, 500, 500, 500]
# JobWeight = [7000,13000,60,40000,30000,6000,4000,12000,8000,6000,4000]
# # G = [2000,4000,60,8000,6000,3000,2000,3000,2000,3000,2000] #粒度
# G = [1000,2000,60,4000,3000,1000,700,2000,1500,3000,2000] #粒度缩小
# # G = [7000,13000,6000,40000,30000,6000,4000,12000,8000,6000,4000] #不拆分
# Jobs = [0] * len(JobWeight)
# # blendings= [[[0, 1, 2, 3], [4, 5, 6, 7]], [[20, 21], [22, 23]], [[24, 25, 26, 27], [28, 29, 30, 31]], [[32, 33], [34, 35]]]

"""小案例"""
Machine = [7,15,9,4,3,12,4,4,5,13,4,10,45,56]
# JobWeight = [700,1300,600,4000,3000,600,400,1200,800,600,400]
JobWeight = [3500,6500,60,10000,10000,6000,4000,12000,8000,6000,4000]
# G = [500,1000,60,1000,1000,1000,700,2000,1500,1500,1000] #粒度缩小（正常）67工件
# G = [1000,2000,60,2000,2000,2000,1500,4000,3000,3000,2000] #35工件（减半）
G = [250,480,60,500,500,500,350,1000,700,500,350] #141工件（翻倍）
# G = [350,650,60,800,800,600,400,1200,800,600,400] #107工件
Jobs = [0] * len(JobWeight)

"""计算工件总量以及拆分后的列表，存放每一个订单拆为几个工件"""
# 计算Job,工件总数
for i in range(len(JobWeight)):
    Jobs[i] = math.ceil(JobWeight[i] / G[i]) #计算工件数向上取整（不准确）
    Job += Jobs[i] # Job:30
print('Jobs=',Jobs)
print('Job=',Job)


"""将工件按订单区分开来，创建一个数组"""
#Order_to_Job=  [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19], [20, 21], [22, 23], [24, 25, 26, 27], [28, 29, 30, 31], [32, 33], [34, 35]]
Order_to_Job = []
boundary_L = 0
boundary_R = Jobs[0]
for i in range(len(JobWeight)):
    Job_Scope = [i for i in range(boundary_L,boundary_R)]
    Order_to_Job.append(Job_Scope)
    if (i != len(JobWeight)-1):
        boundary_L += Jobs[i]
        boundary_R = boundary_L+Jobs[i+1]
    else:
        boundary_L = 0
        boundary_R = 0
    # print('boundary_L=',boundary_L,'boundary_R=',boundary_R)
print('Order_to_Job= ',Order_to_Job)


"""计算H，存放每一个工件的重量，len(H)=Job，不满粒度的用整除后的余数"""
# 计算H
H = []
for i in range(len(Jobs)):
    for j in range(Jobs[i] - 1):
        H.append(G[i])
    H.append(JobWeight[i] - G[i]*(Jobs[i]-1))


"""存放加工方式，属于某一个订单，计算改纺时使用"""
# 存放加工方式
Process = []
for i in range(len(Jobs)):
    for j in range(Jobs[i]):
        process0 = []
        for k in range(State):
            process0.append(i+1)
        Process.append(process0)


"""挑选出混纺工件"""
hun_index = 6 # 从0开始算
hun=[[0,1],[5,6],[7,8],[9,10]] #原料0和1混纺，原料5和6混纺……（从0开始数）按订单分开
blendings = [[[],[]],[[],[]],[[],[]],[[],[]]] #两个品种需要混纺的工件编号，一一对应
for i in range(len(hun)):
    k = 0
    for j in hun[i]:
        n = 0##混纺工件起始序号
        for m in range(j):
            n += Jobs[m]
        for p in range(Jobs[j]):
            blendings[i][k].append(n+p)
        k+=1


"""设置具有优先级的工件"""
Priority = [59,60,61,62,63,64,65,66] #专纺“ZF”（正常）67工件
# Priority = [59,60,61,62,63,64,65,66] #35工件（减半）
# Priority = [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140] #141工件（翻倍）
# Priority = [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106] #107工件
# Priority = [76, 77, 78, 79, 80, 81, 82, 83]

"""将工序索引按字典储存"""
dic_process= {'梳棉':[0,1,2],
       '预并条':[3],
       '条并卷':[4],
       '精梳':[5],
       '预并条混':[6],
       '并条':[7,8,9,10],
       '粗纱':[11],
       '细纱':[12],
       '络筒':[13]}


"""PT需要工件编号，调整为看订单，创建订单编号和工件的字典，a(棉)，b(涤纶)代表拆分，1，2代表同类型"""
#Jobs= [7, 7, 1, 10, 10, 6, 6, 6, 6, 4, 4]
Job_ID = [] #存放工件所属订单索引，从0开始，67个工件
for i in range(len(JobWeight)):
    for j in range(Jobs[i]):
        Job_ID.append(i)
print("Job_ID= " , Job_ID)
dic_order = {'L02-1045-076JLT-a':Order_to_Job[0],
       'L02-1045-076JLT-b':Order_to_Job[1],
       'L04-2080-073JLT-1':Order_to_Job[2],
       'L04-2080-073JLT-2':Order_to_Job[3],
       'L04-2080-073JLT-3':Order_to_Job[4],
       'L03-1045-074JLT-1-a':Order_to_Job[5],
       'L03-1045-074JLT-1-b':Order_to_Job[6],
       'L03-1045-074JLT-2-a':Order_to_Job[7],
       'L03-1045-074JLT-2-b':Order_to_Job[8],
       'L03-1045-074JLT-ZF-a':Order_to_Job[9],
       'L03-1045-074JLT-ZF-b':Order_to_Job[10]}
print("dic_order['L02-1045-076JLT-b']=",dic_order['L02-1045-076JLT-b'])


"""按照棉、涤、是否混纺将总订单区分"""
dic_order_material = {'棉无需混纺':[2,3,4],
                      '棉需混纺':[0,5,7,9],
                      '涤纶需混纺':[1,6,8,10]}

"""按照工序，将不同原料要经过的工序区分"""
dic_order_process = {'棉无需混纺':[1,3,4,5,9,11,12,13],
                     '棉需混纺':[1,3,4,5,6,9,11,12,13],
                     '涤纶需混纺':[2,3,6,10,11,12,13]}

# change_order = [[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[1,9],[1,10],[1,11],
#      [2,3],[2,4],[2,5],[2,6],[2,7],[2,8],[2,9],[2,10],[2,11],
#      [3,1],[3,2],[3,6],[3,7],[3,8],[3,9],[3,10],[3,11],
#      [4,1],[4,2],[4,6],[4,7],[4,8],[4,9],[4,10],[4,11],
#      [5,1],[5,2],[5,6],[5,7],[5,8],[5,9],[5,10],[5,11],
#      [6,1],[6,2],[6,3],[6,4],[6,5],[6,7],[6,9],[6,11],
#      [8,1],[8,2],[8,3],[8,4],[8,5],[8,7],[8,9],[8,11],
#      [10,1],[10,2],[10,3],[10,4],[10,5],[10,7],[10,9],[10,11],
#      [7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,8],[7,10],
#      [9,1],[9,2],[9,3],[9,4],[9,5],[9,6],[9,8],[9,10],
#      [11,1],[11,2],[11,3],[11,4],[11,5],[11,6],[11,8],[11,10]]

change_order = [[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[1,9],[1,10],[1,11],
     [2,3],[2,4],[2,5],[2,6],[2,7],[2,8],[2,9],[2,10],[2,11],
     [3,1],[3,2],[3,6],[3,7],[3,8],[3,9],[3,10],[3,11],
     [4,1],[4,2],[4,6],[4,7],[4,8],[4,9],[4,10],[4,11],
     [5,1],[5,2],[5,6],[5,7],[5,8],[5,9],[5,10],[5,11],
     [6,1],[6,2],[6,3],[6,4],[6,5],
     [8,1],[8,2],[8,3],[8,4],[8,5],
     [10,1],[10,2],[10,3],[10,4],[10,5],
     [7,1],[7,2],[7,3],[7,4],[7,5],
     [9,1],[9,2],[9,3],[9,4],[9,5],
     [11,1],[11,2],[11,3],[11,4],[11,5]]